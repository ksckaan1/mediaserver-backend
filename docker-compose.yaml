x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  media_service:
    build:
      context: .
      dockerfile: .docker/media_service.Dockerfile
    networks:
      - app
    ports:
      - "9191:8080"
    environment:
      PORT: 8080
      DATABASE_URL: postgres://mediaservice:mediaservice@postgres:5432/mediaservice?sslmode=disable
      S3_ENDPOINT: minio:9000
      S3_REGION: eu-central-1
      S3_BUCKET: ${MINIO_BUCKET}
      S3_ACCESS_KEY: ${MINIO_ROOT_USER}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      S3_USE_SSL: "false"
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    logging: *default-logging

  movie_service:
    build:
      context: .
      dockerfile: .docker/movie_service.Dockerfile
    networks:
      - app
    ports:
      - "9192:8080"
    environment:
      PORT: 8080
      DATABASE_URL: mongodb://movieapp:movieapp123@mongo:27017/movie_service?authSource=movie_service
      MEDIA_SERVER_HOST: ${MEDIA_SERVER_HOST}
      TMDB_SERVER_HOST: ${TMDB_SERVER_HOST}
    depends_on:
      mongo:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    logging: *default-logging

  tmdb_service:
    build:
      context: .
      dockerfile: .docker/tmdb_service.Dockerfile
    networks:
      - app
    ports:
      - "9193:8080"
    environment:
      PORT: 8080
      TMDB_API_KEY: ${TMDB_API_KEY}
      COUCHBASE_URL: couchbase://couchbase
      COUCHBASE_USER: ${COUCHBASE_USER}
      COUCHBASE_PASSWORD: ${COUCHBASE_PASSWORD}
      COUCHBASE_BUCKET: ${COUCHBASE_BUCKET}
    restart: unless-stopped
    logging: *default-logging

  postgres:
    image: postgres:latest
    networks:
      - app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./.docker/db-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    restart: unless-stopped
    logging: *default-logging

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app
    logging: *default-logging

  minio-client:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/media || true;
      /usr/bin/mc anonymous set public myminio/media;
      exit 0;
      "
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - app
    logging: *default-logging

  mongo:
    image: mongo:latest
    restart: unless-stopped
    networks:
      - app
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: movie_service
    volumes:
      - mongo_data:/data/db
      - ./.docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging: *default-logging

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    networks:
      - app
    ports:
      - "9090:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/movie_service
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      mongo:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    logging: *default-logging

  memcached:
    image: memcached
    command:
      - --conn-limit=1024
      - --memory-limit=64
      - --threads=4
    networks:
      - app
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 128M
    logging: *default-logging

  couchbase:
    image: couchbase:community
    container_name: couchbase
    networks:
      - app
    ports:
      - "8091:8091"  # Yönetim paneli
      - "8092:8092"  # Views
      - "8093:8093"  # Query (N1QL)
      - "8094:8094"  # Search
      - "11207:11207"  # Veri protokolü (SSL)
      - "11210:11210"  # Veri protokolü
    environment:
      - COUCHBASE_ADMINISTRATOR_USERNAME=${COUCHBASE_USER}
      - COUCHBASE_ADMINISTRATOR_PASSWORD=${COUCHBASE_PASSWORD}

volumes:
  postgres_data:
  mongo_data:
  minio_data:

networks:
  app:
    driver: bridge
    name: mediaserver_network