// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: series_service.proto

package seriespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSeriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TmdbId        string                 `protobuf:"bytes,3,opt,name=tmdb_id,json=tmdbId,proto3" json:"tmdb_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeriesRequest) Reset() {
	*x = CreateSeriesRequest{}
	mi := &file_series_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeriesRequest) ProtoMessage() {}

func (x *CreateSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeriesRequest.ProtoReflect.Descriptor instead.
func (*CreateSeriesRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSeriesRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSeriesRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSeriesRequest) GetTmdbId() string {
	if x != nil {
		return x.TmdbId
	}
	return ""
}

type CreateSeriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeriesResponse) Reset() {
	*x = CreateSeriesResponse{}
	mi := &file_series_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeriesResponse) ProtoMessage() {}

func (x *CreateSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeriesResponse.ProtoReflect.Descriptor instead.
func (*CreateSeriesResponse) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSeriesResponse) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

type GetSeriesByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeriesByIDRequest) Reset() {
	*x = GetSeriesByIDRequest{}
	mi := &file_series_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeriesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeriesByIDRequest) ProtoMessage() {}

func (x *GetSeriesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeriesByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSeriesByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetSeriesByIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

type Series struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	TmdbInfo      *TMDBInfo              `protobuf:"bytes,6,opt,name=tmdb_info,json=tmdbInfo,proto3" json:"tmdb_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Series) Reset() {
	*x = Series{}
	mi := &file_series_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{3}
}

func (x *Series) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Series) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Series) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Series) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Series) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Series) GetTmdbInfo() *TMDBInfo {
	if x != nil {
		return x.TmdbInfo
	}
	return nil
}

type TMDBInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          *structpb.Struct       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TMDBInfo) Reset() {
	*x = TMDBInfo{}
	mi := &file_series_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TMDBInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMDBInfo) ProtoMessage() {}

func (x *TMDBInfo) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMDBInfo.ProtoReflect.Descriptor instead.
func (*TMDBInfo) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{4}
}

func (x *TMDBInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TMDBInfo) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListSeriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int64                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSeriesRequest) Reset() {
	*x = ListSeriesRequest{}
	mi := &file_series_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSeriesRequest) ProtoMessage() {}

func (x *ListSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSeriesRequest.ProtoReflect.Descriptor instead.
func (*ListSeriesRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListSeriesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSeriesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SeriesList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Series              `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeriesList) Reset() {
	*x = SeriesList{}
	mi := &file_series_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeriesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesList) ProtoMessage() {}

func (x *SeriesList) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesList.ProtoReflect.Descriptor instead.
func (*SeriesList) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{6}
}

func (x *SeriesList) GetList() []*Series {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SeriesList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SeriesList) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SeriesList) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UpdateSeriesByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TmdbId        string                 `protobuf:"bytes,4,opt,name=tmdb_id,json=tmdbId,proto3" json:"tmdb_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSeriesByIDRequest) Reset() {
	*x = UpdateSeriesByIDRequest{}
	mi := &file_series_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSeriesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeriesByIDRequest) ProtoMessage() {}

func (x *UpdateSeriesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeriesByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeriesByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSeriesByIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *UpdateSeriesByIDRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSeriesByIDRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSeriesByIDRequest) GetTmdbId() string {
	if x != nil {
		return x.TmdbId
	}
	return ""
}

type DeleteSeriesByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeriesByIDRequest) Reset() {
	*x = DeleteSeriesByIDRequest{}
	mi := &file_series_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeriesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeriesByIDRequest) ProtoMessage() {}

func (x *DeleteSeriesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeriesByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeriesByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSeriesByIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

type CreateSeasonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeasonRequest) Reset() {
	*x = CreateSeasonRequest{}
	mi := &file_series_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeasonRequest) ProtoMessage() {}

func (x *CreateSeasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeasonRequest.ProtoReflect.Descriptor instead.
func (*CreateSeasonRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSeasonRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *CreateSeasonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSeasonRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateSeasonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeasonResponse) Reset() {
	*x = CreateSeasonResponse{}
	mi := &file_series_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeasonResponse) ProtoMessage() {}

func (x *CreateSeasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeasonResponse.ProtoReflect.Descriptor instead.
func (*CreateSeasonResponse) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSeasonResponse) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

type GetSeasonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeasonByIDRequest) Reset() {
	*x = GetSeasonByIDRequest{}
	mi := &file_series_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeasonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeasonByIDRequest) ProtoMessage() {}

func (x *GetSeasonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeasonByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSeasonByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetSeasonByIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

type Season struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	SeriesId      string                 `protobuf:"bytes,6,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Order         int32                  `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Season) Reset() {
	*x = Season{}
	mi := &file_series_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Season) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Season) ProtoMessage() {}

func (x *Season) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Season.ProtoReflect.Descriptor instead.
func (*Season) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{12}
}

func (x *Season) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Season) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Season) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Season) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Season) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Season) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *Season) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ListSeasonsBySeriesIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSeasonsBySeriesIDRequest) Reset() {
	*x = ListSeasonsBySeriesIDRequest{}
	mi := &file_series_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSeasonsBySeriesIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSeasonsBySeriesIDRequest) ProtoMessage() {}

func (x *ListSeasonsBySeriesIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSeasonsBySeriesIDRequest.ProtoReflect.Descriptor instead.
func (*ListSeasonsBySeriesIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListSeasonsBySeriesIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

type SeasonList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Season              `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeasonList) Reset() {
	*x = SeasonList{}
	mi := &file_series_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeasonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonList) ProtoMessage() {}

func (x *SeasonList) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonList.ProtoReflect.Descriptor instead.
func (*SeasonList) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{14}
}

func (x *SeasonList) GetList() []*Season {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateSeasonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSeasonByIDRequest) Reset() {
	*x = UpdateSeasonByIDRequest{}
	mi := &file_series_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSeasonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeasonByIDRequest) ProtoMessage() {}

func (x *UpdateSeasonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeasonByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeasonByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateSeasonByIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

func (x *UpdateSeasonByIDRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSeasonByIDRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ReorderSeasonsBySeriesIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	SeasonIds     []string               `protobuf:"bytes,2,rep,name=season_ids,json=seasonIds,proto3" json:"season_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReorderSeasonsBySeriesIDRequest) Reset() {
	*x = ReorderSeasonsBySeriesIDRequest{}
	mi := &file_series_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReorderSeasonsBySeriesIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderSeasonsBySeriesIDRequest) ProtoMessage() {}

func (x *ReorderSeasonsBySeriesIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderSeasonsBySeriesIDRequest.ProtoReflect.Descriptor instead.
func (*ReorderSeasonsBySeriesIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{16}
}

func (x *ReorderSeasonsBySeriesIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *ReorderSeasonsBySeriesIDRequest) GetSeasonIds() []string {
	if x != nil {
		return x.SeasonIds
	}
	return nil
}

type DeleteSeasonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeasonByIDRequest) Reset() {
	*x = DeleteSeasonByIDRequest{}
	mi := &file_series_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeasonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeasonByIDRequest) ProtoMessage() {}

func (x *DeleteSeasonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeasonByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeasonByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSeasonByIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

type CreateEpisodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MediaId       string                 `protobuf:"bytes,4,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEpisodeRequest) Reset() {
	*x = CreateEpisodeRequest{}
	mi := &file_series_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEpisodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEpisodeRequest) ProtoMessage() {}

func (x *CreateEpisodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEpisodeRequest.ProtoReflect.Descriptor instead.
func (*CreateEpisodeRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{18}
}

func (x *CreateEpisodeRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

func (x *CreateEpisodeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateEpisodeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEpisodeRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type CreateEpisodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpisodeId     string                 `protobuf:"bytes,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEpisodeResponse) Reset() {
	*x = CreateEpisodeResponse{}
	mi := &file_series_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEpisodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEpisodeResponse) ProtoMessage() {}

func (x *CreateEpisodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEpisodeResponse.ProtoReflect.Descriptor instead.
func (*CreateEpisodeResponse) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateEpisodeResponse) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

type GetEpisodeByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpisodeId     string                 `protobuf:"bytes,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEpisodeByIDRequest) Reset() {
	*x = GetEpisodeByIDRequest{}
	mi := &file_series_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEpisodeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEpisodeByIDRequest) ProtoMessage() {}

func (x *GetEpisodeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEpisodeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetEpisodeByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetEpisodeByIDRequest) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

type Episode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	SeasonId      string                 `protobuf:"bytes,6,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	MediaId       string                 `protobuf:"bytes,7,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Order         int32                  `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Episode) Reset() {
	*x = Episode{}
	mi := &file_series_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{21}
}

func (x *Episode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Episode) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Episode) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Episode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Episode) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Episode) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

func (x *Episode) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *Episode) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ListEpisodesBySeasonIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEpisodesBySeasonIDRequest) Reset() {
	*x = ListEpisodesBySeasonIDRequest{}
	mi := &file_series_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEpisodesBySeasonIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEpisodesBySeasonIDRequest) ProtoMessage() {}

func (x *ListEpisodesBySeasonIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEpisodesBySeasonIDRequest.ProtoReflect.Descriptor instead.
func (*ListEpisodesBySeasonIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListEpisodesBySeasonIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

type EpisodeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Episode             `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EpisodeList) Reset() {
	*x = EpisodeList{}
	mi := &file_series_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EpisodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpisodeList) ProtoMessage() {}

func (x *EpisodeList) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpisodeList.ProtoReflect.Descriptor instead.
func (*EpisodeList) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{23}
}

func (x *EpisodeList) GetList() []*Episode {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateEpisodeByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpisodeId     string                 `protobuf:"bytes,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MediaId       string                 `protobuf:"bytes,4,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEpisodeByIDRequest) Reset() {
	*x = UpdateEpisodeByIDRequest{}
	mi := &file_series_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEpisodeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEpisodeByIDRequest) ProtoMessage() {}

func (x *UpdateEpisodeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEpisodeByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateEpisodeByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateEpisodeByIDRequest) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

func (x *UpdateEpisodeByIDRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateEpisodeByIDRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateEpisodeByIDRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type ReorderEpisodesBySeasonIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	EpisodeIds    []string               `protobuf:"bytes,2,rep,name=episode_ids,json=episodeIds,proto3" json:"episode_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReorderEpisodesBySeasonIDRequest) Reset() {
	*x = ReorderEpisodesBySeasonIDRequest{}
	mi := &file_series_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReorderEpisodesBySeasonIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderEpisodesBySeasonIDRequest) ProtoMessage() {}

func (x *ReorderEpisodesBySeasonIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderEpisodesBySeasonIDRequest.ProtoReflect.Descriptor instead.
func (*ReorderEpisodesBySeasonIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{25}
}

func (x *ReorderEpisodesBySeasonIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

func (x *ReorderEpisodesBySeasonIDRequest) GetEpisodeIds() []string {
	if x != nil {
		return x.EpisodeIds
	}
	return nil
}

type DeleteEpisodeByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpisodeId     string                 `protobuf:"bytes,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEpisodeByIDRequest) Reset() {
	*x = DeleteEpisodeByIDRequest{}
	mi := &file_series_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEpisodeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEpisodeByIDRequest) ProtoMessage() {}

func (x *DeleteEpisodeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_series_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEpisodeByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteEpisodeByIDRequest) Descriptor() ([]byte, []int) {
	return file_series_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteEpisodeByIDRequest) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

var File_series_service_proto protoreflect.FileDescriptor

var file_series_service_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6d,
	0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6d, 0x64,
	0x62, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x22, 0xf6, 0x01,
	0x0a, 0x06, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x6d, 0x64, 0x62, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x70, 0x62, 0x2e, 0x54, 0x4d, 0x44, 0x42, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x6d,
	0x64, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x08, 0x54, 0x4d, 0x44, 0x42, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x41, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x75, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6d,
	0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6d, 0x64,
	0x62, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xf9, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3b, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a,
	0x1f, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0x36, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x95, 0x02,
	0x0a, 0x07, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0b, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x20, 0x52, 0x65, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x32, 0xf8, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0xec, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x53, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x5c, 0x0a, 0x18, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x12, 0x28,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xfc,
	0x03, 0x0a, 0x0e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x26, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70,
	0x62, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a,
	0x19, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73,
	0x42, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x1d, 0x5a,
	0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x70, 0x62, 0x3b, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_series_service_proto_rawDescOnce sync.Once
	file_series_service_proto_rawDescData []byte
)

func file_series_service_proto_rawDescGZIP() []byte {
	file_series_service_proto_rawDescOnce.Do(func() {
		file_series_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_series_service_proto_rawDesc), len(file_series_service_proto_rawDesc)))
	})
	return file_series_service_proto_rawDescData
}

var file_series_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_series_service_proto_goTypes = []any{
	(*CreateSeriesRequest)(nil),              // 0: mediapb.CreateSeriesRequest
	(*CreateSeriesResponse)(nil),             // 1: mediapb.CreateSeriesResponse
	(*GetSeriesByIDRequest)(nil),             // 2: mediapb.GetSeriesByIDRequest
	(*Series)(nil),                           // 3: mediapb.Series
	(*TMDBInfo)(nil),                         // 4: mediapb.TMDBInfo
	(*ListSeriesRequest)(nil),                // 5: mediapb.ListSeriesRequest
	(*SeriesList)(nil),                       // 6: mediapb.SeriesList
	(*UpdateSeriesByIDRequest)(nil),          // 7: mediapb.UpdateSeriesByIDRequest
	(*DeleteSeriesByIDRequest)(nil),          // 8: mediapb.DeleteSeriesByIDRequest
	(*CreateSeasonRequest)(nil),              // 9: mediapb.CreateSeasonRequest
	(*CreateSeasonResponse)(nil),             // 10: mediapb.CreateSeasonResponse
	(*GetSeasonByIDRequest)(nil),             // 11: mediapb.GetSeasonByIDRequest
	(*Season)(nil),                           // 12: mediapb.Season
	(*ListSeasonsBySeriesIDRequest)(nil),     // 13: mediapb.ListSeasonsBySeriesIDRequest
	(*SeasonList)(nil),                       // 14: mediapb.SeasonList
	(*UpdateSeasonByIDRequest)(nil),          // 15: mediapb.UpdateSeasonByIDRequest
	(*ReorderSeasonsBySeriesIDRequest)(nil),  // 16: mediapb.ReorderSeasonsBySeriesIDRequest
	(*DeleteSeasonByIDRequest)(nil),          // 17: mediapb.DeleteSeasonByIDRequest
	(*CreateEpisodeRequest)(nil),             // 18: mediapb.CreateEpisodeRequest
	(*CreateEpisodeResponse)(nil),            // 19: mediapb.CreateEpisodeResponse
	(*GetEpisodeByIDRequest)(nil),            // 20: mediapb.GetEpisodeByIDRequest
	(*Episode)(nil),                          // 21: mediapb.Episode
	(*ListEpisodesBySeasonIDRequest)(nil),    // 22: mediapb.ListEpisodesBySeasonIDRequest
	(*EpisodeList)(nil),                      // 23: mediapb.EpisodeList
	(*UpdateEpisodeByIDRequest)(nil),         // 24: mediapb.UpdateEpisodeByIDRequest
	(*ReorderEpisodesBySeasonIDRequest)(nil), // 25: mediapb.ReorderEpisodesBySeasonIDRequest
	(*DeleteEpisodeByIDRequest)(nil),         // 26: mediapb.DeleteEpisodeByIDRequest
	(*timestamppb.Timestamp)(nil),            // 27: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                  // 28: google.protobuf.Struct
	(*emptypb.Empty)(nil),                    // 29: google.protobuf.Empty
}
var file_series_service_proto_depIdxs = []int32{
	27, // 0: mediapb.Series.created_at:type_name -> google.protobuf.Timestamp
	27, // 1: mediapb.Series.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 2: mediapb.Series.tmdb_info:type_name -> mediapb.TMDBInfo
	28, // 3: mediapb.TMDBInfo.data:type_name -> google.protobuf.Struct
	3,  // 4: mediapb.SeriesList.list:type_name -> mediapb.Series
	27, // 5: mediapb.Season.created_at:type_name -> google.protobuf.Timestamp
	27, // 6: mediapb.Season.updated_at:type_name -> google.protobuf.Timestamp
	12, // 7: mediapb.SeasonList.list:type_name -> mediapb.Season
	27, // 8: mediapb.Episode.created_at:type_name -> google.protobuf.Timestamp
	27, // 9: mediapb.Episode.updated_at:type_name -> google.protobuf.Timestamp
	21, // 10: mediapb.EpisodeList.list:type_name -> mediapb.Episode
	0,  // 11: mediapb.SeriesService.CreateSeries:input_type -> mediapb.CreateSeriesRequest
	2,  // 12: mediapb.SeriesService.GetSeriesByID:input_type -> mediapb.GetSeriesByIDRequest
	5,  // 13: mediapb.SeriesService.ListSeries:input_type -> mediapb.ListSeriesRequest
	7,  // 14: mediapb.SeriesService.UpdateSeriesByID:input_type -> mediapb.UpdateSeriesByIDRequest
	8,  // 15: mediapb.SeriesService.DeleteSeriesByID:input_type -> mediapb.DeleteSeriesByIDRequest
	9,  // 16: mediapb.SeasonService.CreateSeason:input_type -> mediapb.CreateSeasonRequest
	11, // 17: mediapb.SeasonService.GetSeasonByID:input_type -> mediapb.GetSeasonByIDRequest
	13, // 18: mediapb.SeasonService.ListSeasonsBySeriesID:input_type -> mediapb.ListSeasonsBySeriesIDRequest
	15, // 19: mediapb.SeasonService.UpdateSeasonByID:input_type -> mediapb.UpdateSeasonByIDRequest
	16, // 20: mediapb.SeasonService.ReorderSeasonsBySeriesID:input_type -> mediapb.ReorderSeasonsBySeriesIDRequest
	17, // 21: mediapb.SeasonService.DeleteSeasonByID:input_type -> mediapb.DeleteSeasonByIDRequest
	18, // 22: mediapb.EpisodeService.CreateEpisode:input_type -> mediapb.CreateEpisodeRequest
	20, // 23: mediapb.EpisodeService.GetEpisodeByID:input_type -> mediapb.GetEpisodeByIDRequest
	22, // 24: mediapb.EpisodeService.ListEpisodesBySeasonID:input_type -> mediapb.ListEpisodesBySeasonIDRequest
	24, // 25: mediapb.EpisodeService.UpdateEpisodeByID:input_type -> mediapb.UpdateEpisodeByIDRequest
	25, // 26: mediapb.EpisodeService.ReorderEpisodesBySeasonID:input_type -> mediapb.ReorderEpisodesBySeasonIDRequest
	26, // 27: mediapb.EpisodeService.DeleteEpisodeByID:input_type -> mediapb.DeleteEpisodeByIDRequest
	1,  // 28: mediapb.SeriesService.CreateSeries:output_type -> mediapb.CreateSeriesResponse
	3,  // 29: mediapb.SeriesService.GetSeriesByID:output_type -> mediapb.Series
	6,  // 30: mediapb.SeriesService.ListSeries:output_type -> mediapb.SeriesList
	29, // 31: mediapb.SeriesService.UpdateSeriesByID:output_type -> google.protobuf.Empty
	29, // 32: mediapb.SeriesService.DeleteSeriesByID:output_type -> google.protobuf.Empty
	10, // 33: mediapb.SeasonService.CreateSeason:output_type -> mediapb.CreateSeasonResponse
	12, // 34: mediapb.SeasonService.GetSeasonByID:output_type -> mediapb.Season
	14, // 35: mediapb.SeasonService.ListSeasonsBySeriesID:output_type -> mediapb.SeasonList
	29, // 36: mediapb.SeasonService.UpdateSeasonByID:output_type -> google.protobuf.Empty
	29, // 37: mediapb.SeasonService.ReorderSeasonsBySeriesID:output_type -> google.protobuf.Empty
	29, // 38: mediapb.SeasonService.DeleteSeasonByID:output_type -> google.protobuf.Empty
	19, // 39: mediapb.EpisodeService.CreateEpisode:output_type -> mediapb.CreateEpisodeResponse
	21, // 40: mediapb.EpisodeService.GetEpisodeByID:output_type -> mediapb.Episode
	23, // 41: mediapb.EpisodeService.ListEpisodesBySeasonID:output_type -> mediapb.EpisodeList
	29, // 42: mediapb.EpisodeService.UpdateEpisodeByID:output_type -> google.protobuf.Empty
	29, // 43: mediapb.EpisodeService.ReorderEpisodesBySeasonID:output_type -> google.protobuf.Empty
	29, // 44: mediapb.EpisodeService.DeleteEpisodeByID:output_type -> google.protobuf.Empty
	28, // [28:45] is the sub-list for method output_type
	11, // [11:28] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_series_service_proto_init() }
func file_series_service_proto_init() {
	if File_series_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_series_service_proto_rawDesc), len(file_series_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_series_service_proto_goTypes,
		DependencyIndexes: file_series_service_proto_depIdxs,
		MessageInfos:      file_series_service_proto_msgTypes,
	}.Build()
	File_series_service_proto = out.File
	file_series_service_proto_goTypes = nil
	file_series_service_proto_depIdxs = nil
}
