// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: season_service.proto

package seasonpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSeasonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeasonRequest) Reset() {
	*x = CreateSeasonRequest{}
	mi := &file_season_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeasonRequest) ProtoMessage() {}

func (x *CreateSeasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeasonRequest.ProtoReflect.Descriptor instead.
func (*CreateSeasonRequest) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSeasonRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *CreateSeasonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSeasonRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateSeasonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeasonResponse) Reset() {
	*x = CreateSeasonResponse{}
	mi := &file_season_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeasonResponse) ProtoMessage() {}

func (x *CreateSeasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeasonResponse.ProtoReflect.Descriptor instead.
func (*CreateSeasonResponse) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSeasonResponse) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

type GetSeasonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeasonByIDRequest) Reset() {
	*x = GetSeasonByIDRequest{}
	mi := &file_season_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeasonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeasonByIDRequest) ProtoMessage() {}

func (x *GetSeasonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeasonByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSeasonByIDRequest) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetSeasonByIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

type Season struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	SeriesId      string                 `protobuf:"bytes,6,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Order         int32                  `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Season) Reset() {
	*x = Season{}
	mi := &file_season_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Season) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Season) ProtoMessage() {}

func (x *Season) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Season.ProtoReflect.Descriptor instead.
func (*Season) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{3}
}

func (x *Season) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Season) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Season) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Season) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Season) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Season) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *Season) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ListSeasonsBySeriesIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSeasonsBySeriesIDRequest) Reset() {
	*x = ListSeasonsBySeriesIDRequest{}
	mi := &file_season_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSeasonsBySeriesIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSeasonsBySeriesIDRequest) ProtoMessage() {}

func (x *ListSeasonsBySeriesIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSeasonsBySeriesIDRequest.ProtoReflect.Descriptor instead.
func (*ListSeasonsBySeriesIDRequest) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListSeasonsBySeriesIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

type SeasonList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Season              `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeasonList) Reset() {
	*x = SeasonList{}
	mi := &file_season_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeasonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonList) ProtoMessage() {}

func (x *SeasonList) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonList.ProtoReflect.Descriptor instead.
func (*SeasonList) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{5}
}

func (x *SeasonList) GetList() []*Season {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateSeasonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSeasonByIDRequest) Reset() {
	*x = UpdateSeasonByIDRequest{}
	mi := &file_season_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSeasonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeasonByIDRequest) ProtoMessage() {}

func (x *UpdateSeasonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeasonByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeasonByIDRequest) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSeasonByIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

func (x *UpdateSeasonByIDRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSeasonByIDRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ReorderSeasonsBySeriesIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeriesId      string                 `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	SeasonIds     []string               `protobuf:"bytes,2,rep,name=season_ids,json=seasonIds,proto3" json:"season_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReorderSeasonsBySeriesIDRequest) Reset() {
	*x = ReorderSeasonsBySeriesIDRequest{}
	mi := &file_season_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReorderSeasonsBySeriesIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderSeasonsBySeriesIDRequest) ProtoMessage() {}

func (x *ReorderSeasonsBySeriesIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderSeasonsBySeriesIDRequest.ProtoReflect.Descriptor instead.
func (*ReorderSeasonsBySeriesIDRequest) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReorderSeasonsBySeriesIDRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *ReorderSeasonsBySeriesIDRequest) GetSeasonIds() []string {
	if x != nil {
		return x.SeasonIds
	}
	return nil
}

type DeleteSeasonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeasonId      string                 `protobuf:"bytes,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeasonByIDRequest) Reset() {
	*x = DeleteSeasonByIDRequest{}
	mi := &file_season_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeasonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeasonByIDRequest) ProtoMessage() {}

func (x *DeleteSeasonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_season_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeasonByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeasonByIDRequest) Descriptor() ([]byte, []int) {
	return file_season_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSeasonByIDRequest) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

var File_season_service_proto protoreflect.FileDescriptor

var file_season_service_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x3b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x22, 0x32, 0x0a,
	0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x6e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5d, 0x0a, 0x1f, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0x36, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xf5, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x5d, 0x0a, 0x18, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x12, 0x29,
	0x2e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x1d, 0x5a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62, 0x3b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_season_service_proto_rawDescOnce sync.Once
	file_season_service_proto_rawDescData []byte
)

func file_season_service_proto_rawDescGZIP() []byte {
	file_season_service_proto_rawDescOnce.Do(func() {
		file_season_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_season_service_proto_rawDesc), len(file_season_service_proto_rawDesc)))
	})
	return file_season_service_proto_rawDescData
}

var file_season_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_season_service_proto_goTypes = []any{
	(*CreateSeasonRequest)(nil),             // 0: seasonpb.CreateSeasonRequest
	(*CreateSeasonResponse)(nil),            // 1: seasonpb.CreateSeasonResponse
	(*GetSeasonByIDRequest)(nil),            // 2: seasonpb.GetSeasonByIDRequest
	(*Season)(nil),                          // 3: seasonpb.Season
	(*ListSeasonsBySeriesIDRequest)(nil),    // 4: seasonpb.ListSeasonsBySeriesIDRequest
	(*SeasonList)(nil),                      // 5: seasonpb.SeasonList
	(*UpdateSeasonByIDRequest)(nil),         // 6: seasonpb.UpdateSeasonByIDRequest
	(*ReorderSeasonsBySeriesIDRequest)(nil), // 7: seasonpb.ReorderSeasonsBySeriesIDRequest
	(*DeleteSeasonByIDRequest)(nil),         // 8: seasonpb.DeleteSeasonByIDRequest
	(*timestamppb.Timestamp)(nil),           // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                   // 10: google.protobuf.Empty
}
var file_season_service_proto_depIdxs = []int32{
	9,  // 0: seasonpb.Season.created_at:type_name -> google.protobuf.Timestamp
	9,  // 1: seasonpb.Season.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 2: seasonpb.SeasonList.list:type_name -> seasonpb.Season
	0,  // 3: seasonpb.SeasonService.CreateSeason:input_type -> seasonpb.CreateSeasonRequest
	2,  // 4: seasonpb.SeasonService.GetSeasonByID:input_type -> seasonpb.GetSeasonByIDRequest
	4,  // 5: seasonpb.SeasonService.ListSeasonsBySeriesID:input_type -> seasonpb.ListSeasonsBySeriesIDRequest
	6,  // 6: seasonpb.SeasonService.UpdateSeasonByID:input_type -> seasonpb.UpdateSeasonByIDRequest
	7,  // 7: seasonpb.SeasonService.ReorderSeasonsBySeriesID:input_type -> seasonpb.ReorderSeasonsBySeriesIDRequest
	8,  // 8: seasonpb.SeasonService.DeleteSeasonByID:input_type -> seasonpb.DeleteSeasonByIDRequest
	1,  // 9: seasonpb.SeasonService.CreateSeason:output_type -> seasonpb.CreateSeasonResponse
	3,  // 10: seasonpb.SeasonService.GetSeasonByID:output_type -> seasonpb.Season
	5,  // 11: seasonpb.SeasonService.ListSeasonsBySeriesID:output_type -> seasonpb.SeasonList
	10, // 12: seasonpb.SeasonService.UpdateSeasonByID:output_type -> google.protobuf.Empty
	10, // 13: seasonpb.SeasonService.ReorderSeasonsBySeriesID:output_type -> google.protobuf.Empty
	10, // 14: seasonpb.SeasonService.DeleteSeasonByID:output_type -> google.protobuf.Empty
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_season_service_proto_init() }
func file_season_service_proto_init() {
	if File_season_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_season_service_proto_rawDesc), len(file_season_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_season_service_proto_goTypes,
		DependencyIndexes: file_season_service_proto_depIdxs,
		MessageInfos:      file_season_service_proto_msgTypes,
	}.Build()
	File_season_service_proto = out.File
	file_season_service_proto_goTypes = nil
	file_season_service_proto_depIdxs = nil
}
